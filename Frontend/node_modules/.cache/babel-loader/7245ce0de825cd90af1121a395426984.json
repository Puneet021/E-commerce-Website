{"ast":null,"code":"import { API } from \"../../backend\"; //category calls\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all categories\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //products calls\n//create a product\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get a product\n\nexport const getProduct = productId => {\n  return new Promise((resolve, reject) => {\n    fetch(`${API}/product/${productId}`, {\n      method: \"GET\"\n    }).then(response => {\n      return response.json();\n    }).catch(err => console.log(err));\n  });\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/punee/Atom_files/Ecommerce_Website/projfrontend/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createProduct","product","getProducts","deleteProduct","productId","getProduct","Promise","resolve","reject","updateProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\n\n//category calls\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//get all categories\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//products calls\n\n//create a product\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//get all products\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//get a product\n\nexport const getProduct = productId => {\n  return new Promise((resolve, reject) => {\n      fetch(`${API}/product/${productId}`, {\n      method: \"GET\"\n      })\n        .then(response => {\n          return response.json();\n        })\n        .catch(err => console.log(err));\n  })\n};\n\n//update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}